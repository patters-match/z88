lstoff

; **************************************************************************************************
; OZ ram variables area definitions.
;
; This file is part of the Z88 operating system, OZ      0000000000000000      ZZZZZZZZZZZZZZZZZZZ
;                                                       000000000000000000   ZZZZZZZZZZZZZZZZZZZ
; OZ is free software; you can redistribute it and/    0000            0000              ZZZZZ
; or modify it under the terms of the GNU General      0000            0000            ZZZZZ
; Public License as published by the Free Software     0000            0000          ZZZZZ
; Foundation; either version 2, or (at your option)    0000            0000        ZZZZZ
; any later version. OZ is distributed in the hope     0000            0000      ZZZZZ
; that it will be useful, but WITHOUT ANY WARRANTY;    0000            0000    ZZZZZ
; without even the implied warranty of MERCHANTA-       000000000000000000   ZZZZZZZZZZZZZZZZZZZZ
; BILITY or FITNESS FOR A PARTICULAR PURPOSE. See        0000000000000000  ZZZZZZZZZZZZZZZZZZZZ
; the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with OZ; see the file
; COPYING. If not, write to:
;                                  Free Software Foundation, Inc.
;                                  59 Temple Place-Suite 330,
;                                  Boston, MA 02111-1307, USA.
;
; Original implementation by
; (C) Jorma Oksanen (jorma.oksanen@aini.fi), 2003
;
; Additional improvements, comments, definitions and new implementations by
; (C) Thierry Peycru (pek@users.sf.net), 2005-2007
; (C) Gunther Strube (gbs@users.sf.net), 2005-2007
;
; $Id$
; ***************************************************************************************************
;
; ***************************************************************************************************
; ***                             INTERNAL OPERATING SYSTEM USAGE ONLY                            ***
; ***************************************************************************************************
;
;
;       variable prefix:
;
;       a       ASCII string
;       c       character code
;       p       pointer (16 bits)
;       e       extended pointer (24 bits)
;       f       float (40 bits)
;
;       sl      signed long (32 bits)
;       ul      unsigned long (32 bits)
;       sw      signed word (16 bits)
;       uw      unsigned word (16 bits)
;       sb      signed byte (8 bits)
;       ub      unsigned byte (8 bits)
;
;
; Constants are all uppercase

include "kernel.def"                            ; to be removed (and renamed oz.def)
include "z80.def"                               ; to be removed and inlined in each file

; System variable area
defc    sysvar_area = $020b

defvars SYSVAR_AREA
        ubScreenBase            ds.b    1
                                ds.b    10      ; $020C
        KbdData                 ds.b    10      ; $0216 data on both negative and positive side
                                ds.b    10      ; $021F
        SerTXHandle                             ; $0229 on negative side!
                                ds.b    10
        SerRXHandle                             ; $0233 on negative side!
        _unused                 ds.b    4       ; can be removed (tested)


        ubFsTemp                ds.b    1       ; $0237
        uwSmallTimer            ds.w    1       ; $0238
        uwSlotAvailFsBlocks     ds.w    5       ; $023a why 5 and not 4 ?


        pFsMemPool              ds.w    1       ; $0244
        uwFsAvailBlock          ds.w    1       ; $0246
        _another_1              ds.w    1       ; $0248
        word_024A               ds.w    1       ; $024a used in nqsp.asm
        _another_2              ds.w    1       ; $024c
        pMTHScreenSave          ds.w    1       ; $024e
        pMTHHelpHandle          ds.w    1       ; $0250
        word_0252               ds.w    1       ; $0252 used in nqsp.asm
        uwPanelFilePtr          ds.w    1       ; $0256
        ubSysFlags1             ds.b    1       ; $0258
        cExtendedChar           ds.b    1       ; $0259
        OZcmdBuf                ds.b    6       ; $025a


        pNMIStackPtr            ds.w    1       ; $0260
        ubWaitCount1            ds.b    1       ; $0262
        ubWaitCount2            ds.b    1       ; $0263
        ubTimeoutCnt            ds.b    1       ; $0264
        ubCLIActiveCnt          ds.b    1       ; $0265
        ubNextAlmSeconds        ds.b    1       ; $0266
        uwNextAlmMinutes        ds.w    1       ; $0267
        ubNextAlmMinutesB       ds.b    1       ; $0269
        ubSoundActive           ds.b    1       ; $026a
        ubSoundCount            ds.b    1       ; $026b
                                ds.w    1
        ubAlmDisableCnt         ds.b    1       ; $026e
        ubAlmDisplayCnt         ds.b    1       ; $026f
        ubNumActiveAlm          ds.b    1       ; $0270
        ubAlmActionCnt          ds.b    1       ; $0271
        pFirstAlarm             ds.w    1       ; $0272
        pNextAlmHandle          ds.w    1       ; $0274
        pPrefs1                 ds.w    1       ; $0276
        pPrefs2                 ds.w    1       ; $0278
                                ds.b    1       
        ulSlot1ID               ds.l    1       ; $027b
        ulSlot2ID               ds.l    1       ; $027f
        ulSlot3ID               ds.l    1       ; $0283
        ubHlpActiveCmd          ds.b    1       ; $0287
        ubHlpActiveTpc          ds.b    1       ; $0288
        ubHlpActiveHelp         ds.b    1       ; $0289
        ubHlpActiveApp          ds.b    1       ; $028a
        eHlpAppDOR              ds.p    1       ; $028c
        eHlpTopics              ds.p    1       ; $028f
        eHlpCommands            ds.p    1       ; $0292
        eHlpHelp                ds.p    1       ; $0295
        eHlpTokens              ds.p    1       ; $0298
        ActiveAppHandle         ds.b    16      ; $029b actual handle structure
        uwOSTinTimeout          ds.w    1       ; $02ab
        pOSEntHandle            ds.w    1       ; $02ad
enddef
                                                ; $02af-$03af is a system page

;       uwAppStaticHnd-(pAppEnvHandle-1) is cleared when new app is created
defvars $03b0
    uwAppStaticHnd              ds.w    1
    ubAppDynID                  ds.b    1
    ubAppResCycle               ds.b    1
    pAppEntrypoint              ds.w    1
    ubAppDORFlags               ds.b    1
    ubAppDORFlags2              ds.b    1
    uwAppEnvOverhead            ds.w    1
    pAppStackPtr                ds.w    1
    pAppUnSafeArea              ds.w    1
    pAppBadMemTable             ds.w    1
    pAppBadMemHandle            ds.w    1
    ubAppContRAM                ds.b    1
    ubAppBindings               ds.b    4
    ubAppKbdBits                ds.b    1
    pMailbox                    ds.w    1
    ubMailboxSize               ds.b    2       ; 1 more, try to remove...
    pAppErrorHandler            ds.w    1
    ubAppLastError              ds.b    1
    ubAppCallLevel              ds.b    1
    ubOldCallLevel              ds.b    1
    pAppHelpHandle              ds.w    1
    ubAppHelpBank               ds.b    1
    eAppDOR_2                   ds.p    1
    eAppTopics_2                ds.p    1
    eAppCommands_2              ds.p    1
    eAppHelp_2                  ds.p    1
    eAppTokens_2                ds.p    1
enddef                                          ; at 03E2 (free from E2-EF)
    
defvars $03f0
        pAppEnvHandle           ds.w    1
        uwFreeRAMPages          ds.w    1
        pFirstHandle            ds.w    1
        ubIntTaskToDo           ds.b    1
        ubIntStatus             ds.b    1
        ubSlotRAMoffset         ds.b    4
        ubSlotRamSize           ds.b    4
enddef        

defvars $0400
; Random
        ubRandomPtr             ds.b    1
        uwRandom1               ds.w    1
        uwRandom2               ds.w    1

; Keymaps
        ubKmBank                ds.b    1       ; memory bank where tables are, bound in S2
        ubKmPage                ds.b    1       ; high byte of address
        ubKmCaps                ds.b    1       ; low byte of CAPS translation table address
        ubKmDiamond             ds.b    1       ; low byte of <> translation table address
        ubKmSquare              ds.b    1       ; low byte of [] translation table address
        ubKmDeadkey             ds.b    1       ; low byte of deadkey table address
        ubKmDeadchar            ds.b    1       ; char displayed in OZ window
        ubKmDeadsub             ds.b    1       ; offset to list for current deadkey
        aKmCountry              ds.w    1       ; country id for OZ window

; Preserved system area (32 bytes preserved over a soft reset)
; (040F-042E)
        sysvar_area_presv
        ubTimeBufferSelect      ds.b    1       ; select time buffer A or B (was $2100A0)
        ubTIM0_A                ds.b    1       ; buffer A : TIM0-4
        ubTIM1_A                ds.b    1
        ubTIM2_A                ds.b    1
        ubTIM3_A                ds.b    1
        ubTIM4_A                ds.b    1
        ubTIM0_B                ds.b    1       ; buffer B : TIM0-4
        ubTIM1_B                ds.b    1
        ubTIM2_B                ds.b    1
        ubTIM3_B                ds.b    1
        ubTIM4_B                ds.b    1
        uwSysDateLow            ds.w    1       ; 11 bytes buffer for system time
        uwSysDateMid            ds.w    1
        uwSysDateHigh           ds.w    1
        SysTimeBuffer           ds.b    5
        free_free               ds.b    10      ; 10 bytes are left in this area

; Preserved panel system area (11 bytes preserved over a soft reset)
; 042F-0435
        panel_area_presv
        ubResetType             ds.b    1       ; $00 hard / $FF soft
        ubTimeout               ds.b    1       ; panel system parameters
        ubRepeat                ds.b    1       ; "
        cKeyclick               ds.b    1       ; "
        cSound                  ds.b    1       ; "
        ubBadSize               ds.b    1       ; "
        cCountry                ds.b    1       ; country code
        sysvar_area_presv_end
        free_free_free          ds.b    10      ; (0436-043F) 10 bytes free

; Keyboard buffer
        KbdBuffer               ds.b    32      ; $0440-045F

; Hardware port softcopies
        BlinkPortSoftCopies     ds.b    160     ; $0460-$04FF

; Handles
        Handles                 ds.b    16*96   ; $0500-$0AFF HNDLEN * NUMHANDLE

; Serial interface buffers
        SerTXBuffer             ds.b    128     ; $0B00-$0B7F
        SerRXBuffer             ds.b    128     ; $0B80-$0BFF

; NMI/wait
        uwTimecounter           ds.w    1       ; $0C00
        ubTimecounterSoft       ds.b    1
        NMIStackBottom          ds.b    48
        NMIStackTop             ds.w    1       ; $0C33

; EPROM:
        ubEpr_NameLen           ds.b    1
        pEpr_PrgTable           ds.w    1
        pEpr_Parsedname         ds.w    1
        pEpr_FileHandle         ds.w    1

; Printer:
        StackBufPtr             ds.w    1
        CtrlBuf                 ds.w    1
        CtrlLen                 ds.b    1
        prtInChar               ds.b    1
        Translations            ds.b    37
        PlaceHolderChar         ds.b    1
        PendingSpaces           ds.b    1
        Rows                    ds.b    1
        PageLen                 ds.b    1
        Flags                   ds.b    1
        AttrUnderline           ds.b    1
        AttrBold                ds.b    1
        AttrExtended            ds.b    1
        AttrItalics             ds.b    1
        AttrSubscript           ds.b    1
        AttrSuperscript         ds.b    1
        AttrAltfont             ds.b    1
        AttrUserdef             ds.b    1

; Index:
        ubIdxPubFlags           ds.b    1
        ubIdxFlags2             ds.b    1
        ubIdxTopProcess         ds.b    1
        ubIdxNProcDisplayed     ds.b    1
        ubIdxTopApplication     ds.b    1
        ubIdxNApplDisplayed     ds.b    1
        ubIdxSelectorPos        ds.b    1
        ubIdxActiveWindow       ds.b    1
        ubIdxErrorCode          ds.b    1
        ubIdxProcRmCount        ds.b    1
        ubIdxDynamicID          ds.b    1
        ubIdxOldProcRmCount     ds.b    1
        pIdxMemHandle           ds.b    2
        pIdxCurrentProcHandle   ds.b    2
        pIdxMyProcHandle        ds.b    2       ; static handle of Index
        pIdxRunProcIX           ds.b    2
        pIdxAutoRunAppl         ds.b    2
        eIdxCliList             ds.b    3
        eIdxProcList            ds.b    3
        eIdxIndexProc           ds.b    3
        eIdxRunProc             ds.b    3
        IdxKeyTable             ds.b    50
        IdxZKeyTable            ds.b    50
        IdxZZKeyTable           ds.b    50

; GN calls:
        uwGnDateLow             ds.w    1
        uwGnDateMid             ds.w    1
        uwGnDateHigh            ds.w    1
        GnHwTimeBuf             ds.b    5
        GnFnameBuf              ds.b    206
        pAlarmList              ds.p    1       ; badly named (eAlarmList)
        uwNextAlarmID           ds.w    1

; Serial interface flow:
        ubSerParity             ds.b    1
        ubSerFlowControl        ds.b    1
        cSerXonXoffChar         ds.b    1

enddef

; APPLICATION PROCESS AREA

defvars $1800

; Mailbox:
        MailBoxName             ds.b    17
        ubMailboxLength         ds.b    1
        MailboxData             ds.b    64
        ubMailBoxID             ds.b    1

; Process:
        ubBadInfoBlock          ds.b    1       ; info block length (always $03, the three follwing bytes)
        ubBadInfoStartPage      ds.b    1       ; bad application start page (always $20)
        ubBadInfoEndPage        ds.b    1       ; set by AllocBadRAM1
        ubBadInfoReserved       ds.b    1       ; unused (always 00 set in process3.asm/osent_16)
        pStkEntUsedStkBottom    ds.w    1
        uwStkEntUsedStkSize     ds.w    1
        pStkTempStkTop          ds.w    1
        stkBottom                               ; $185d
;                                               ; 5 bytes here ?

enddef

defc    unk_1864                =$1864          ; ???

lston
