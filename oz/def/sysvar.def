lstoff

; **************************************************************************************************
; OZ ram variables area definitions.
;
; This file is part of the Z88 operating system, OZ      0000000000000000      ZZZZZZZZZZZZZZZZZZZ
;                                                       000000000000000000   ZZZZZZZZZZZZZZZZZZZ
; OZ is free software; you can redistribute it and/    0000            0000              ZZZZZ
; or modify it under the terms of the GNU General      0000            0000            ZZZZZ
; Public License as published by the Free Software     0000            0000          ZZZZZ
; Foundation; either version 2, or (at your option)    0000            0000        ZZZZZ
; any later version. OZ is distributed in the hope     0000            0000      ZZZZZ
; that it will be useful, but WITHOUT ANY WARRANTY;    0000            0000    ZZZZZ
; without even the implied warranty of MERCHANTA-       000000000000000000   ZZZZZZZZZZZZZZZZZZZZ
; BILITY or FITNESS FOR A PARTICULAR PURPOSE. See        0000000000000000  ZZZZZZZZZZZZZZZZZZZZ
; the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with OZ; see the file
; COPYING. If not, write to:
;                                  Free Software Foundation, Inc.
;                                  59 Temple Place-Suite 330,
;                                  Boston, MA 02111-1307, USA.
;
; Original implementation by
; (C) Jorma Oksanen (jorma.oksanen@aini.fi), 2003
;
; Additional improvements, comments, definitions and new implementations by
; (C) Thierry Peycru (pek@users.sf.net), 2005-2007
; (C) Gunther Strube (gbs@users.sf.net), 2005-2007
;
; $Id$
; ***************************************************************************************************
;
; ***************************************************************************************************
; ***                             INTERNAL OPERATING SYSTEM USAGE ONLY                            ***
; ***************************************************************************************************
;
;
;       variable prefix:
;
;       a       ASCII string
;       c       character code
;       p       pointer (16 bits)
;       e       extended pointer (24 bits)
;       f       float (40 bits)
;
;       sl      signed long (32 bits)
;       ul      unsigned long (32 bits)
;       sw      signed word (16 bits)
;       uw      unsigned word (16 bits)
;       sb      signed byte (8 bits)
;       ub      unsigned byte (8 bits)
;
;
; Constants are all uppercase

include "kernel.def"                            ; to be removed (and renamed oz.def)
include "z80.def"                               ; to be removed and inlined in each file

; --------------------
; FIRST 8K RAM MAPPING
; --------------------

; $0000-$027F is low ram routines
defc    SV_KERNEL_RAM          = $0280          ;  384 bytes, 364 used
defc    SV_PRESERVED_RAM       = $0400          ;   96 bytes,  22 used
defc    SV_HARDWARE_RAM        = $0460          ;  160 bytes, all used
defc    SV_STRUCT_RAM          = $0500          ; 1792 bytes, all used
defc    SV_EXTERN_RAM          = $0C00          ; 1024 bytes, 406 used
; $1000-$17FF is swap ram
defc    SV_PROCESS_RAM         = $1800

; --------------------
; KERNEL VARIABLE AREA
; --------------------

defvars SV_KERNEL_RAM

; System (163):
        ubScreenBase            ds.b    1
                                ds.b    10
        KbdData                 ds.b    9       ; data on both negative and positive side
                                ds.b    10
        SerTXHandle                             ; on negative side
                                ds.b    10
        SerRXHandle                             ; on negative side
        _u_0                    ds.b    4       ; ? (can be removed)
        ubFsTemp                ds.b    1
        uwSmallTimer            ds.w    1
        uwSlotAvailFsBlocks     ds.w    5       ; why 5 ?
        pFsMemPool              ds.w    1
        uwFsAvailBlock          ds.w    1
        _u_1                    ds.w    1
        word_024A               ds.w    1       ; to be renamed (used in nqsp.asm)
        _u_2                    ds.w    1       ; ?
        pMTHScreenSave          ds.w    1
        pMTHHelpHandle          ds.w    1
        word_0252               ds.w    1       ; to be renamed (used in nqsp.asm)
        _u_3                    ds.w    1       ; ?
        uwPanelFilePtr          ds.w    1
        ubSysFlags1             ds.b    1
        cExtendedChar           ds.b    1
        OZcmdBuf                ds.b    6
        pNMIStackPtr            ds.w    1
        ubWaitCount1            ds.b    1
        ubWaitCount2            ds.b    1
        ubTimeoutCnt            ds.b    1
        ubCLIActiveCnt          ds.b    1
        ubNextAlmSeconds        ds.b    1
        uwNextAlmMinutes        ds.w    1
        ubNextAlmMinutesB       ds.b    1
        ubSoundActive           ds.b    1
        ubSoundCount            ds.b    1
        _u_4                    ds.w    1       ; ?
        ubAlmDisableCnt         ds.b    1
        ubAlmDisplayCnt         ds.b    1
        ubNumActiveAlm          ds.b    1
        ubAlmActionCnt          ds.b    1
        pFirstAlarm             ds.w    1
        pNextAlmHandle          ds.w    1
        pPrefs1                 ds.w    1
        pPrefs2                 ds.w    1
        ulSlot1ID               ds.l    1
        ulSlot2ID               ds.l    1
        ulSlot3ID               ds.l    1
        ubHlpActiveCmd          ds.b    1
        ubHlpActiveTpc          ds.b    1
        ubHlpActiveHelp         ds.b    1
        ubHlpActiveApp          ds.b    1
        _u_5                    ds.b    1       ; ?
        eHlpAppDOR              ds.p    1
        eHlpTopics              ds.p    1
        eHlpCommands            ds.p    1
        eHlpHelp                ds.p    1
        eHlpTokens              ds.p    1
        ActiveAppHandle         ds.b    16      ; actual handle structure
        uwOSTinTimeout          ds.w    1
        pOSEntHandle            ds.w    1

; Active application (51):
        uwAppStaticHnd          ds.w    1       ; pAppEnvHandle - uwAppStaticHnd - 1 is cleared when new app is created
        ubAppDynID              ds.b    1
        ubAppResCycle           ds.b    1
        pAppEntrypoint          ds.w    1
        ubAppDORFlags           ds.b    1
        ubAppDORFlags2          ds.b    1
        uwAppEnvOverhead        ds.w    1
        pAppStackPtr            ds.w    1
        pAppUnSafeArea          ds.w    1
        pAppBadMemTable         ds.w    1
        pAppBadMemHandle        ds.w    1
        ubAppContRAM            ds.b    1
        ubAppBindings           ds.b    4
        ubAppKbdBits            ds.b    1
        pMailbox                ds.w    1
        ubMailboxSize           ds.b    2       ; 1 more, try to remove...
        pAppErrorHandler        ds.w    1
        ubAppLastError          ds.b    1
        ubAppCallLevel          ds.b    1
        ubOldCallLevel          ds.b    1
        pAppHelpHandle          ds.w    1
        ubAppHelpBank           ds.b    1
        eAppDOR_2               ds.p    1
        eAppTopics_2            ds.p    1
        eAppCommands_2          ds.p    1
        eAppHelp_2              ds.p    1
        eAppTokens_2            ds.p    1

; System (16):
        pAppEnvHandle           ds.w    1
        uwFreeRAMPages          ds.w    1
        pFirstHandle            ds.w    1
        ubIntTaskToDo           ds.b    1
        ubIntStatus             ds.b    1
        ubSlotRAMoffset         ds.b    4
        ubSlotRamSize           ds.b    4

; Random (5):
        ubRandomPtr             ds.b    1
        uwRandom1               ds.w    1
        uwRandom2               ds.w    1

; NMI/wait (53):
        uwTimecounter           ds.w    1
        ubTimecounterSoft       ds.b    1
        NMIStackBottom          ds.b    48
        NMIStackTop             ds.w    1

; Keymaps (10):
        ubKmBank                ds.b    1       ; memory bank where tables are, bound in S2
        ubKmPage                ds.b    1       ; high byte of address
        ubKmCaps                ds.b    1       ; low byte of CAPS translation table address
        ubKmDiamond             ds.b    1       ; low byte of <> translation table address
        ubKmSquare              ds.b    1       ; low byte of [] translation table address
        ubKmDeadkey             ds.b    1       ; low byte of deadkey table address
        ubKmDeadchar            ds.b    1       ; char displayed in OZ window
        ubKmDeadsub             ds.b    1       ; offset to list for current deadkey
        aKmCountry              ds.w    1       ; country id for OZ window

; Serial interface flow (3):
        ubSerParity             ds.b    1
        ubSerFlowControl        ds.b    1
        cSerXonXoffChar         ds.b    1

; EPROM interface (7):
        ubEpr_NameLen           ds.b    1
        pEpr_PrgTable           ds.w    1
        pEpr_Parsedname         ds.w    1
        pEpr_FileHandle         ds.w    1

; Printer (56):
        StackBufPtr             ds.w    1
        CtrlBuf                 ds.w    1
        CtrlLen                 ds.b    1
        prtInChar               ds.b    1
        Translations            ds.b    37
        PlaceHolderChar         ds.b    1
        PendingSpaces           ds.b    1
        Rows                    ds.b    1
        PageLen                 ds.b    1
        Flags                   ds.b    1
        AttrUnderline           ds.b    1
        AttrBold                ds.b    1
        AttrExtended            ds.b    1
        AttrItalics             ds.b    1
        AttrSubscript           ds.b    1
        AttrSuperscript         ds.b    1
        AttrAltfont             ds.b    1
        AttrUserdef             ds.b    1

enddef        


; --------------
; PRESERVED AREA
; --------------

defvars SV_PRESERVED_RAM

; Preserved clocks (22):
        sysvar_area_presv
        ubTimeBufferSelect      ds.b    1       ; select time buffer A or B (was $2100A0)
        ubTIM0_A                ds.b    1       ; buffer A : TIM0-4
        ubTIM1_A                ds.b    1
        ubTIM2_A                ds.b    1
        ubTIM3_A                ds.b    1
        ubTIM4_A                ds.b    1
        ubTIM0_B                ds.b    1       ; buffer B : TIM0-4
        ubTIM1_B                ds.b    1
        ubTIM2_B                ds.b    1
        ubTIM3_B                ds.b    1
        ubTIM4_B                ds.b    1
        uwSysDateLow            ds.w    1       ; 11 bytes buffer for system time
        uwSysDateMid            ds.w    1
        uwSysDateHigh           ds.w    1
        SysTimeBuffer           ds.b    5

; Preserved panel (7):
        ubResetType             ds.b    1       ; $00 hard / $FF soft
        ubTimeout               ds.b    1       ; panel system parameters
        ubRepeat                ds.b    1       ; "
        cKeyclick               ds.b    1       ; "
        cSound                  ds.b    1       ; "
        ubBadSize               ds.b    1       ; "
        cCountry                ds.b    1       ; country code
        sysvar_area_presv_end

enddef


; -------------
; HARDWARE AREA
; -------------

defvars SV_HARDWARE_RAM

; Screen softcopies:
                                ds.b    32

; Keyboard buffer:
        KbdBuffer               ds.b    48

; Other blink port softcopies:
                                ds.b    64

; User port softcopies (unused):
                                ds.b    16

enddef


; ---------------
; STRUCTURES AREA
; ---------------

defvars SV_STRUCT_RAM

; Handles:
        Handles                 ds.b    16*96   ; HNDLEN * NUMHANDLE

; Serial interface buffers:
        SerTXBuffer             ds.b    128
        SerRXBuffer             ds.b    128

enddef


; --------------------
; EXTERNAL SYSTEM AREA
; --------------------

defvars SV_EXTERN_RAM

; Index (184):
        ubIdxPubFlags           ds.b    1
        ubIdxFlags2             ds.b    1
        ubIdxTopProcess         ds.b    1
        ubIdxNProcDisplayed     ds.b    1
        ubIdxTopApplication     ds.b    1
        ubIdxNApplDisplayed     ds.b    1
        ubIdxSelectorPos        ds.b    1
        ubIdxActiveWindow       ds.b    1
        ubIdxErrorCode          ds.b    1
        ubIdxProcRmCount        ds.b    1
        ubIdxDynamicID          ds.b    1
        ubIdxOldProcRmCount     ds.b    1
        pIdxMemHandle           ds.b    2
        pIdxCurrentProcHandle   ds.b    2
        pIdxMyProcHandle        ds.b    2       ; static handle of Index
        pIdxRunProcIX           ds.b    2
        pIdxAutoRunAppl         ds.b    2
        eIdxCliList             ds.b    3
        eIdxProcList            ds.b    3
        eIdxIndexProc           ds.b    3
        eIdxRunProc             ds.b    3
        IdxKeyTable             ds.b    50
        IdxZKeyTable            ds.b    50
        IdxZZKeyTable           ds.b    50

; GN calls (222):
        uwGnDateLow             ds.w    1
        uwGnDateMid             ds.w    1
        uwGnDateHigh            ds.w    1
        GnHwTimeBuf             ds.b    5
        GnFnameBuf              ds.b    206
        pAlarmList              ds.p    1       ; badly named (eAlarmList)
        uwNextAlarmID           ds.w    1

enddef


; ------------------------
; APPLICATION PROCESS AREA
; ------------------------

defvars SV_PROCESS_RAM

; Mailbox (83):
        MailBoxName             ds.b    17
        ubMailboxLength         ds.b    1
        MailboxData             ds.b    64
        ubMailBoxID             ds.b    1

; Process (10):
        ubBadInfoBlock          ds.b    1       ; info block length (always $03, the three following bytes)
        ubBadInfoStartPage      ds.b    1       ; bad application start page (always $20)
        ubBadInfoEndPage        ds.b    1       ; bad application end page set by AllocBadRAM1
        ubBadInfoReserved       ds.b    1       ; unused (always 00 set in process3.asm/osent_16)
        pStkEntUsedStkBottom    ds.w    1
        uwStkEntUsedStkSize     ds.w    1
        pStkTempStkTop          ds.w    1
        stkBottom                               ; $185d
;                                               ; 5 bytes here ?

enddef

defc    unk_1864                =$1864          ; ?

lston
