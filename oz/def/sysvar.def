lstoff

; **************************************************************************************************
; OZ ram variables area definitions.
;
; This file is part of the Z88 operating system, OZ      0000000000000000      ZZZZZZZZZZZZZZZZZZZ
;                                                       000000000000000000   ZZZZZZZZZZZZZZZZZZZ
; OZ is free software; you can redistribute it and/    0000            0000              ZZZZZ
; or modify it under the terms of the GNU General      0000            0000            ZZZZZ
; Public License as published by the Free Software     0000            0000          ZZZZZ
; Foundation; either version 2, or (at your option)    0000            0000        ZZZZZ
; any later version. OZ is distributed in the hope     0000            0000      ZZZZZ
; that it will be useful, but WITHOUT ANY WARRANTY;    0000            0000    ZZZZZ
; without even the implied warranty of MERCHANTA-       000000000000000000   ZZZZZZZZZZZZZZZZZZZZ
; BILITY or FITNESS FOR A PARTICULAR PURPOSE. See        0000000000000000  ZZZZZZZZZZZZZZZZZZZZ
; the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with OZ; see the file
; COPYING. If not, write to:
;                                  Free Software Foundation, Inc.
;                                  59 Temple Place-Suite 330,
;                                  Boston, MA 02111-1307, USA.
;
; Original implementation by
; (C) Jorma Oksanen (jorma.oksanen@aini.fi), 2003
;
; Additional improvements, comments, definitions and new implementations by
; (C) Thierry Peycru (pek@users.sf.net), 2005-2007
; (C) Gunther Strube (gbs@users.sf.net), 2005-2007
;
; $Id$
;***************************************************************************************************
;
;
;       variable prefix:
;
;       a       ASCII string
;       c       character code
;       p       pointer (16 bits)
;       e       extended pointer (24 bits)
;       f       float (40 bits)
;
;       sl      signed long (32 bits)
;       ul      unsigned long (32 bits)
;       sw      signed word (16 bits)
;       uw      unsigned word (16 bits)
;       sb      signed byte (8 bits)
;       ub      unsigned byte (8 bits)
;
;
; Constants are all uppercase

        include "kernel.def"
        include "z80.def"

; System variable area
defc    sysvar_area = $020b
defc    ubScreenBase            =$020b
defc    KbdData                 =$0216          ; data on both negative and positive side
defc    SerTXHandle             =$0229          ; on negative side!
defc    SerRXHandle             =$0233          ; on negative side!
defc    ubFsTemp                =$0237
defc    uwSmallTimer            =$0238
defc    uwSlotAvailFsBlocks     =$023a          ; ds.b 4*2
defc    pFsMemPool              =$0244
defc    uwFsAvailBlock          =$0246
defc    word_024A               =$024a          ; used in nqsp.asm
defc    pMTHScreenSave          =$024e
defc    pMTHHelpHandle          =$0250
defc    word_0252               =$0252          ; used in nqsp.asm
defc    uwPanelFilePtr          =$0256
defc    ubSysFlags1             =$0258
defc    cExtendedChar           =$0259
defc    OZcmdBuf                =$025a
defc    pNMIStackPtr            =$0260
defc    ubWaitCount1            =$0262
defc    ubWaitCount2            =$0263
defc    ubTimeoutCnt            =$0264
defc    ubCLIActiveCnt          =$0265
defc    ubNextAlmSeconds        =$0266
defc    uwNextAlmMinutes        =$0267
defc    ubNextAlmMinutesB       =$0269
defc    ubSoundActive           =$026a
defc    ubSoundCount            =$026b
defc    ubAlmDisableCnt         =$026e
defc    ubAlmDisplayCnt         =$026f
defc    ubNumActiveAlm          =$0270
defc    ubAlmActionCnt          =$0271
defc    pFirstAlarm             =$0272
defc    pNextAlmHandle          =$0274
defc    pPrefs1                 =$0276
defc    pPrefs2                 =$0278
defc    ulSlot1ID               =$027b
defc    ulSlot2ID               =$027f
defc    ulSlot3ID               =$0283
defc    ubHlpActiveCmd          =$0287
defc    ubHlpActiveTpc          =$0288
defc    ubHlpActiveHelp         =$0289
defc    ubHlpActiveApp          =$028a
defc    eHlpAppDOR              =$028c
defc    eHlpTopics              =$028f
defc    eHlpCommands            =$0292
defc    eHlpHelp                =$0295
defc    eHlpTokens              =$0298
defc    ActiveAppHandle         =$029b          ; actual handle structure
defc    uwOSTinTimeout          =$02ab
defc    pOSEntHandle            =$02ad
                                                ; $02af-$03af is a system page

;       uwAppStaticHnd-(pAppEnvHandle-1) is cleared when new app is created

defc    uwAppStaticHnd          =$03b0
defc    ubAppDynID              =$03b2
defc    ubAppResCycle           =$03b3
defc    pAppEntrypoint          =$03b4
defc    ubAppDORFlags           =$03b6
defc    ubAppDORFlags2          =$03b7
defc    uwAppEnvOverhead        =$03b8
defc    pAppStackPtr            =$03ba
defc    pAppUnSafeArea          =$03bc
defc    pAppBadMemTable         =$03be
defc    pAppBadMemHandle        =$03c0
defc    ubAppContRAM            =$03c2
defc    ubAppBindings           =$03c3
defc    ubAppKbdBits            =$03c7
defc    pMailbox                =$03c8
defc    ubMailboxSize           =$03ca
defc    pAppErrorHandler        =$03cc
defc    ubAppLastError          =$03ce
defc    ubAppCallLevel          =$03cf
defc    ubOldCallLevel          =$03d0
defc    pAppHelpHandle          =$03d1
defc    ubAppHelpBank           =$03d3
defc    eAppDOR_2               =$03d4
defc    eAppTopics_2            =$03d7
defc    eAppCommands_2          =$03da
defc    eAppHelp_2              =$03dd
defc    eAppTokens_2            =$03e0

defc    pAppEnvHandle           =$03f0
defc    uwFreeRAMPages          =$03f2
defc    pFirstHandle            =$03f4
defc    ubIntTaskToDo           =$03f6
defc    ubIntStatus             =$03f7
defc    ubSlotRamSize           =$03fc
defc    ubSlotRAMoffset         =$03f8

defvars $0400
; Random
        ubRandomPtr             ds.b    1
        uwRandom1               ds.w    1
        uwRandom2               ds.w    1

; Keymaps
        ubKmBank                ds.b    1       ; memory bank where tables are, bound in S2
        ubKmPage                ds.b    1       ; high byte of address
        ubKmCaps                ds.b    1       ; low byte of CAPS translation table address
        ubKmDiamond             ds.b    1       ; low byte of <> translation table address
        ubKmSquare              ds.b    1       ; low byte of [] translation table address
        ubKmDeadkey             ds.b    1       ; low byte of deadkey table address
        ubKmDeadchar            ds.b    1       ; char displayed in OZ window
        ubKmDeadsub             ds.b    1       ; offset to list for current deadkey
        aKmCountry              ds.w    1       ; country id for OZ window

; Preserved system area (32 bytes preserved over a soft reset)
; (040F-042E)
        sysvar_area_presv
        ubTimeBufferSelect      ds.b    1       ; select time buffer A or B (was $2100A0)
        ubTIM0_A                ds.b    1       ; buffer A : TIM0-4
        ubTIM1_A                ds.b    1
        ubTIM2_A                ds.b    1
        ubTIM3_A                ds.b    1
        ubTIM4_A                ds.b    1
        ubTIM0_B                ds.b    1       ; buffer B : TIM0-4
        ubTIM1_B                ds.b    1
        ubTIM2_B                ds.b    1
        ubTIM3_B                ds.b    1
        ubTIM4_B                ds.b    1
        uwSysDateLow            ds.w    1       ; 11 bytes buffer for system time
        uwSysDateMid            ds.w    1
        uwSysDateHigh           ds.w    1
        SysTimeBuffer           ds.b    5
        free_free               ds.b    10      ; 10 bytes are left in this area

; Preserved panel system area (11 bytes preserved over a soft reset)
; 042F-0435
        panel_area_presv
        ubResetType             ds.b    1       ; $00 hard / $FF soft
        ubTimeout               ds.b    1       ; panel system parameters
        ubRepeat                ds.b    1       ; "
        cKeyclick               ds.b    1       ; "
        cSound                  ds.b    1       ; "
        ubBadSize               ds.b    1       ; "
        cCountry                ds.b    1       ; country code
        sysvar_area_presv_end
        free_free_free          ds.b    10      ; (0436-043F) 10 bytes free

; Keyboard buffer
        KbdBuffer               ds.b    32      ; $0440-045F

; Hardware port softcopies
        BlinkPortSoftCopies     ds.b    160     ; $0460-$04FF

; Handles
        Handles                 ds.b    16*96   ; HNDLEN * NUMHANDLE

; Serial interface buffers
        SerTXBuffer             ds.b    128     ; $0B00-$0B7F
        SerRXBuffer             ds.b    128     ; $0B80-$0BFF
enddef

; NMI/wait

defc    uwTimecounter           =$0c00
defc    ubTimecounterSoft       =$0c02
defc    NMIStackTop             =$0c33

; EPROM
defvars $0db8
        ubEpr_SubType           ds.b    1
        __ubEpr_FREE_0          ds.b    1       ; NOT USED
        __ubEpr_FirstBank       ds.b    1       ; NOT USED ANYMORE (due to new File Eprom management routines)
        ubEpr_NameLen           ds.b    1
        __ubEpr_Fstype          ds.b    1       ; NOT USED ANYMORE (due to new File Eprom management routines)
        pEpr_PrgTable           ds.w    1
        pEpr_Parsedname         ds.w    1
        pEpr_FileHandle         ds.w    1
enddef                                          ; ($0dc3-$0dcf) 13 bytes free

; Printer
defvars $0dd0
        StackBufPtr             ds.w    1
        CtrlBuf                 ds.w    1
        CtrlLen                 ds.b    1
        prtInChar               ds.b    1
        Translations            ds.b    37
        PlaceHolderChar         ds.b    1
        PendingSpaces           ds.b    1
        Rows                    ds.b    1
        PageLen                 ds.b    1
        Flags                   ds.b    1
        AttrUnderline           ds.b    1
        AttrBold                ds.b    1
        AttrExtended            ds.b    1
        AttrItalics             ds.b    1
        AttrSubscript           ds.b    1
        AttrSuperscript         ds.b    1
        AttrAltfont             ds.b    1
        AttrUserdef             ds.b    1
enddef

;       0E10-0EC5       Index
defvars $0E10
        ubIdxPubFlags           ds.b    1
        ubIdxFlags2             ds.b    1
        ubIdxTopProcess         ds.b    1
        ubIdxNProcDisplayed     ds.b    1
        ubIdxTopApplication     ds.b    1
        ubIdxNApplDisplayed     ds.b    1
        ubIdxSelectorPos        ds.b    1
        ubIdxActiveWindow       ds.b    1
        ubIdxErrorCode          ds.b    1
        ubIdxProcRmCount        ds.b    1
        ubIdxDynamicID          ds.b    1
        ubIdxOldProcRmCount     ds.b    1
        pIdxMemHandle           ds.b    2
        pIdxCurrentProcHandle   ds.b    2
        pIdxMyProcHandle        ds.b    2       ; static handle of Index
        pIdxRunProcIX           ds.b    2
        pIdxAutoRunAppl         ds.b    2
        eIdxCliList             ds.b    3
        eIdxProcList            ds.b    3
        eIdxIndexProc           ds.b    3
        eIdxRunProc             ds.b    3
        IdxKeyTable             ds.b    50
        IdxZKeyTable            ds.b    50
        IdxZZKeyTable           ds.b    50
enddef                                          ; free at $0ec6, 8 bytes free here

;$0ece-0fa6     GN calls

defc    uwGnDateLow             =$0ece
defc    uwGnDateMid             =$0ed0
defc    uwGnDateHigh            =$0ed2
defc    GnHwTimeBuf             =$0ed4          ; 5 bytes
defc    GnFnameBuf              =$0ed9          ; 206 bytes
defc    pAlarmList              =$0fa7
                                                ; $0faa-$0fab unused?
defc    uwNextAlarmID           =$0fac

;$0fae-$0fb4    Alarm app data - shouldn't be here

defc    MailDate                =$0fae
defc    ubAlmActiveButton       =$0fb1
defc    ubSelectedAlmPos        =$0fb2
defc    ubNumVisibleAlarms      =$0fb3
defc    ubTopVisibleAlarm       =$0fb4

;$0fbf-$0ffb    Calculator app data - shouldn't be here
;               Note that calculator memories are persistant (because of static permanent sysvars)


defc    ubSerParity             =$0ffc          ; move with the others one SI above
defc    ubSerFlowControl        =$0ffd
defc    cSerXonXoffChar         =$0ffe

defc    MailBoxName             =$1800          ; max 17 bytes
defc    ubMailboxLength         =$1811
defc    MailboxData             =$1812          ; max 64 bytes
defc    ubMailBoxID             =$1852

defc    word_1853               =$1853          ; ???
defc    uwStkEntUsedStkSize     =$1859
defc    pStkTempStkTop          =$185b
defc    stkBottom               =$185d
defc    pStkEntUsedStkBottom    =$1857
defc    unk_1864                =$1864          ; ???

lston
