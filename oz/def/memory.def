lstoff

; **************************************************************************************************
; Standard Z88 Operating System Manifests
;
; This file is part of the Z88 operating system, OZ      0000000000000000      ZZZZZZZZZZZZZZZZZZZ
;                                                       000000000000000000   ZZZZZZZZZZZZZZZZZZZ
; OZ is free software; you can redistribute it and/    0000            0000              ZZZZZ
; or modify it under the terms of the GNU General      0000            0000            ZZZZZ
; Public License as published by the Free Software     0000            0000          ZZZZZ
; Foundation; either version 2, or (at your option)    0000            0000        ZZZZZ
; any later version. OZ is distributed in the hope     0000            0000      ZZZZZ
; that it will be useful, but WITHOUT ANY WARRANTY;    0000            0000    ZZZZZ
; without even the implied warranty of MERCHANTA-       000000000000000000   ZZZZZZZZZZZZZZZZZZZZ
; BILITY or FITNESS FOR A PARTICULAR PURPOSE. See        0000000000000000  ZZZZZZZZZZZZZZZZZZZZ
; the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with OZ; see the file
; COPYING. If not, write to:
;                                  Free Software Foundation, Inc.
;                                  59 Temple Place-Suite 330,
;                                  Boston, MA 02111-1307, USA.
;
; (C) Jorma Oksanen (jorma.oksanen@aini.fi), 2003
; (C) Thierry Peycru (pek@users.sf.net), 2005-2007
; (C) Gunther Strube (gbs@users.sf.net), 2005-2007
;
; ***************************************************************************************************

; Memory allocation, deallocation:

IF !__MEMORY_DEF__
define __MEMORY_DEF__

     DEFC Os_Mop = $4E             ; Open memory (allocate memory pool)
     DEFC Os_Mal = $54             ; Allocate memory
     DEFC Os_Axp = $D206           ; Allocate explicit page (internal OZ usage)
     DEFC Os_Mfr = $57             ; Free memory
     DEFC Os_Mcl = $51             ; Close memory (free memory pool)

; Memory information movement:

     DEFC Os_Bde = $DA06           ; Copy bytes to extended address
     DEFC Os_Bhl = $DC06           ; Copy bytes from extended address
     DEFC Gn_Rbe = $3E09           ; Read byte at extended address
     DEFC Gn_Wbe = $4009           ; Write byte to extended address

; Memory comparison:

    DEFC Gn_Cme  = $4209           ; compare null-terminated strings

; Memory/bank binding:

     DEFC Os_Mgb = $5A             ; Get current binding
     DEFC Os_Mpb = $5D             ; Set (Put) new binding
     DEFC Os_Bix = $60             ; Bind in extended address (internal)
     DEFC Os_Box = $63             ; Restore bindings after OS_BIX (internal)
     DEFC OZ_MGB = $57             ; OZ V4.1: New fast bank binding status for CALL $0057 in LOWRAM.
     DEFC OZ_MPB = $30             ; OZ V4.1: New fast bank switching implemented for RST 30H.

; Fast code interface for bank switching (A=1)

     DEFC Os_Fc  = $8A

; Linked list manipulation calls (often used in combination with Os_Mal):

     DEFC Gn_Xin = $4609
     DEFC Gn_Xnx = $4409
     DEFC Gn_Xdl = $4809

; Memory Masks used by Os_Mop:

     DEFC MM_S0 = $00              ; Segment 0 mask
     DEFC MM_S1 = $40              ; Segment 1 mask
     DEFC MM_S2 = $80              ; Segment 2 mask
     DEFC MM_S3 = $C0              ; Segment 3 mask

; Additional allocation directives for Os_Mop:

     ; Source of memory (to be allocated):

     DEFC MM_FIX = $02             ; fixed workspace (not subject to swapping)

     DEFC MM_SLT = $04             ; explicit slot usage, masked with:
          DEFC MC_CI = $10         ; internal memory
          DEFC MC_C1 = $01         ; card 1
          DEFC MC_C2 = $02         ; card 2
          DEFC MC_C3 = $03         ; card 3

     ; Allocation variations:

     DEFC MM_EXC = $10             ; exclusive use of bank
     DEFC MM_MUL = $20             ; use multiple banks

     ; Allocation flag bit

     defc MM_B_FIX = 1
     defc MM_B_SLT = 2
     defc MM_B_EXC = 4
     defc MM_B_MUL = 5

; Segment specifiers used by Os_Mgb, Os_Mpb:

     DEFC MS_S0 = $00              ; Segment 0 specifier
     DEFC MS_S1 = $01              ; Segment 1 specifier
     DEFC MS_S2 = $02              ; Segment 2 specifier
     DEFC MS_S3 = $03              ; Segment 3 specifier

; Memory type reported by OS_NQ, NQ_SLT:

     DEFC BU_NOT = 0               ; bank is empty
     DEFC BU_EPR = 1               ; bank is EPROM
     DEFC BU_ROM = 2               ; bank is ROM
     DEFC BU_WRK = 4               ; work memory
     DEFC BU_FIX = 8               ; fixed memory
     DEFC BU_RES = 16              ; reserved memory
     DEFC BU_APL = 32              ; bank is application RAM
     DEFC BU_FRE = 128             ; bank is available RAM

     DEFC BU_B_EPR = 0             ;
     DEFC BU_B_ROM = 1             ;
     DEFC BU_B_WRK = 2             ;
     DEFC BU_B_FIX = 3             ;
     DEFC BU_B_RES = 4             ;
     DEFC BU_B_APL = 5             ;
     DEFC BU_B_FRE = 7             ;

; *** INTERNAL OPERATING SYSTEM USAGE ONLY ***

; Out-of-memory flags

     defc OOM_NORMAL = $01
     defc OOM_FIXED  = $02

     defc OOM_B_NORMAL = 0
     defc OOM_B_FIXED = 1

; MAT (Memory Allocation Tables) entry flags

     defc MAT_SYSTEM     = $01     ; this 'flag' in low byte!
     defc MAT_LAST       = $10
     defc MAT_FULL       = $20
     defc MAT_ALLOCFIXED = $40
     defc MAT_SWAP       = $80

     defc MAT_B_SYSTEM     = 0     ; this 'flag' in low byte!
     defc MAT_B_LAST       = 4
     defc MAT_B_FULL       = 5
     defc MAT_B_ALLOCFIXED = 6
     defc MAT_B_SWAP       = 7

ENDIF

lston
