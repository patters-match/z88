lstoff

; **************************************************************************************************
; Standard Z88 Operating System Manifests
;
; This file is part of the Z88 operating system, OZ      0000000000000000      ZZZZZZZZZZZZZZZZZZZ
;                                                       000000000000000000   ZZZZZZZZZZZZZZZZZZZ
; OZ is free software; you can redistribute it and/    0000            0000              ZZZZZ
; or modify it under the terms of the GNU General      0000            0000            ZZZZZ
; Public License as published by the Free Software     0000            0000          ZZZZZ
; Foundation; either version 2, or (at your option)    0000            0000        ZZZZZ
; any later version. OZ is distributed in the hope     0000            0000      ZZZZZ
; that it will be useful, but WITHOUT ANY WARRANTY;    0000            0000    ZZZZZ
; without even the implied warranty of MERCHANTA-       000000000000000000   ZZZZZZZZZZZZZZZZZZZZ
; BILITY or FITNESS FOR A PARTICULAR PURPOSE. See        0000000000000000  ZZZZZZZZZZZZZZZZZZZZ
; the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with OZ; see the file
; COPYING. If not, write to:
;                                  Free Software Foundation, Inc.
;                                  59 Temple Place-Suite 330,
;                                  Boston, MA 02111-1307, USA.
;
; (C) Jorma Oksanen (jorma.oksanen@aini.fi), 2003
; (C) Thierry Peycru (pek@users.sf.net), 2005-2007
; (C) Gunther Strube (gbs@users.sf.net), 2005-2007
;
; $Id$
; ***************************************************************************************************

; *** INTERNAL OPERATING SYSTEM USAGE ONLY ***

; version:
defc    OZVERSION               = $42

; rom layout:

IF OZ_SLOT1
        defc ROMSIZE            =12             ; OZ is located at top 13 banks in slot 1 on a 1Mb AMD 29F080B Flash Card

        defc OZBANK_LOWRAM      =$74            ; LOWRAM code to be installed during reset (located in EazyLink bank)
        defc OZBANK_GN          =$7B
        defc OZBANK_DC          =$7C
        defc OZBANK_FPP         =$7C
        defc OZBANK_KNL1        =$7D            ; kernel bank 1 (lower)
        defc OZBANK_KNL0        =$7E            ; kernel bank 0 (upper)
        defc OZBANK_MTH         =$7F            ; OZ static structures (DOR's, MTH, Font bitmap)
        defc OZBANK_KEYMAP      =$7F            ; localisation keymap tables
        defc LORES0_PAGE_EXP    =$7F
        defc LORES1_BANK        =$7F
        defc HIRES1_BANK        =$7F
ELSE
        defc ROMSIZE            =32             ; now OZ fits in a 512K AMD 29F040B Flash in slot 0
        defc FILEAREASIZE       =5*4            ; FlashStore file area from top of ROM (and downwards) is 5 x 64K sectors (20 x 16K)

        defc OZBANK_KNL0        =$00            ; kernel bank 0
        defc OZBANK_KNL1        =$01            ; kernel bank 1
        defc OZBANK_DC          =$02
        defc OZBANK_FPP         =$02
        defc OZBANK_GN          =$03
        defc OZBANK_MTH         =$08            ; OZ static structures (DOR's, MTH, Font bitmap)
        defc OZBANK_KEYMAP      =$08            ; localisation keymap tables
        defc LORES0_PAGE_EXP    =$08
        defc LORES1_BANK        =$08
        defc HIRES1_BANK        =$08
        defc OZBANK_LOWRAM      =$0A            ; LOWRAM code to be installed during reset (located in EazyLink bank)
ENDIF

defc    OZCALLTBL               =$ff00
defc    GNCALLTBL               =$8000          ; GN/DC tables at same address,
defc    DCCALLTBL               =$8000          ; change CallGN/CallDC if changed
defc    FPPCALLTBL              =$DA00
defc    LOWRAM_CODE             =$FD00          ; LOWRAM code stored in EazyLink bank at offset $3d00

defc    LORES0_BANK_UNEXP       =$21
defc    LORES0_PAGE_UNEXP       =$22
;       LORES0_BANK_EXP         =$24 or $43     ; calculated by the routine

defc    HIRES0_BANK_UNEXP       =$21
defc    HIRES0_PAGE_UNEXP       =$20
;       HIRES0_BANK_EXP         =$24 or $43     ; calculated by the routine
defc    HIRES0_PAGE_EXP         =$00

defc    LORES1_PAGE             =$10
defc    HIRES1_PAGE             =$08            ; cross LORES1 because first $400 is empty
                                                ; starts really at $1400 (first hires char is number $80)
defc    SBF_BANK                =$20            ; to be renamed ($21 in reality)

; OS pushframe:

defvars 0
        OSFrame_IY              ds.w    1       ; $00
        OSFrame_S2              ds.b    1       ; $02
        OSFrame_S3              ds.b    1       ; $03
        OSFrame_OZCall          ds.w    1       ; $04
        OSFrame_F               ds.b    1       ; $06
        OSFrame_A               ds.b    1       ; $07
        OSFrame_C               ds.b    1       ; $08
        OSFrame_B               ds.b    1       ; $09
        OSFrame_E               ds.b    1       ; $0A
        OSFrame_D               ds.b    1       ; $0B
        OSFrame_L               ds.b    1       ; $0C
        OSFrame_H               ds.b    1       ; $0D
        OSFrame__S2             ds.b    1       ; $0E
        OSFrame__S3             ds.b    1       ; $0F
        OSFrame_OZPC            ds.w    1       ; RET address on SP back to address location of the OZ call
enddef


lston