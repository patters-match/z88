lstoff

; **************************************************************************************************
; Standard Z88 Operating System Manifests
;
; This file is part of the Z88 operating system, OZ      0000000000000000      ZZZZZZZZZZZZZZZZZZZ
;                                                       000000000000000000   ZZZZZZZZZZZZZZZZZZZ
; OZ is free software; you can redistribute it and/    0000            0000              ZZZZZ
; or modify it under the terms of the GNU General      0000            0000            ZZZZZ
; Public License as published by the Free Software     0000            0000          ZZZZZ
; Foundation; either version 2, or (at your option)    0000            0000        ZZZZZ
; any later version. OZ is distributed in the hope     0000            0000      ZZZZZ
; that it will be useful, but WITHOUT ANY WARRANTY;    0000            0000    ZZZZZ
; without even the implied warranty of MERCHANTA-       000000000000000000   ZZZZZZZZZZZZZZZZZZZZ
; BILITY or FITNESS FOR A PARTICULAR PURPOSE. See        0000000000000000  ZZZZZZZZZZZZZZZZZZZZ
; the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with OZ; see the file
; COPYING. If not, write to:
;                                  Free Software Foundation, Inc.
;                                  59 Temple Place-Suite 330,
;                                  Boston, MA 02111-1307, USA.
;
; (C) Jorma Oksanen (jorma.oksanen@aini.fi), 2003
; (C) Thierry Peycru (pek@users.sf.net), 2005-2017
; (C) Gunther Strube (hello@bits4fun.net), 2005-2017
;
; ***************************************************************************************************

; File open system call:

IF !__FILEIO_DEF__
     DEFINE __FILEIO_DEF__

     INCLUDE "macros.def"


     DEFC  GN_Opf = $6009          ; open file/stream (or device)
     DEFC  OS_Op  = $EA06          ; internal open

     ; Parameters used with GN_Opf (in A register)

          DEFC OP_IN   = $01       ; read only (shared)
          DEFC OP_OUT  = $02       ; write only
          DEFC OP_UP   = $03       ; open read/write
          DEFC OP_MEM  = $04       ; Open memory pool
          DEFC OP_DIR  = $05       ; Create directory name (returns DOR handle)
          DEFC OP_DOR  = $06       ; Fetch DOR handle

     ; Various file/stream manipulation calls:

      DEFC  Gn_Ren = $6609     ; rename filename
      DEFC  Os_Ren = $E406     ; file rename (internal)
      DEFC  Gn_Del = $6409     ; delete file
      DEFC  Os_Del = $E606     ; delete file (internal)
      DEFC  Gn_Cl  = $6209     ; close file/stream
      DEFC  Os_Cl  = $E806     ; close file/stream (internal)

      DEFC  Os_Gb  = $39       ; get byte from file or device
      DEFC  Os_Gbt = $3F       ; - with timeout
      DEFC  Os_Pb  = $3C       ; put byte to file or device
      DEFC  Os_Pbt = $42       ; - with timeout
      DEFC  Os_Ugb = $36       ; unget byte (not implemented).
      DEFC  Os_Mv  = $45       ; move bytes between stream and memory
      DEFC  Os_Fdp = $BA06     ; File duplicate (OZ 5.0 and newer)

      DEFC  Os_Frm = $48       ; File read miscellaneous
      DEFC  Os_Fwm = $4B       ; File write miscellaneous

     ; Reason codes, when using OS_Frm or OS_Fwm:
           DEFC  FA_PTR = $01       ; Get sequential file pointer
           DEFC  FA_EXT = $02       ; Get length (Extent) of sequential file
           DEFC  FA_EOF = $03       ; End Of File enquiry
           DEFC  FA_BST = $04       ; Buffer status (system use only)

      DEFC  GN_Dir = $8809     ; Create directory path (OZ 5.0 and newer)
      DEFC  GN_Mov = $8A09     ; Move file (OZ 5.0 and newer)
     ; Reason codes for GN_Cpy and GN_Mov:
           DEFC  MV_TODIR  = $00    ; Move file to directory
           DEFC  MV_TOFILE = $01    ; Move as new file

      DEFC  GN_Cpy = $8C09     ; Copy file (OZ 5.0 and newer)
     ; Reason codes for GN_Cpy:
           DEFC  CP_TODIR  = $00  ; Copy file to directory
           DEFC  CP_TOFILE = $01  ; Copy as new file

     ; Various calls to process filenames:

      DEFC  GN_Pfs = $5A09     ; parse filename segment
      DEFC  GN_Prs = $5809     ; parse filename
      DEFC  GN_Fcm = $4E09     ; compress a filename
      DEFC  GN_Fex = $5009     ; expand a filename
      DEFC  GN_Esa = $5E09     ; read/write filename segments

     ; Calls on wildcards, searching for files, parsing filenames:

      DEFC  GN_Opw = $5209     ; open wildcard handler
      DEFC  GN_Wcl = $5409     ; close wildcard handler
      DEFC  GN_Wfn = $5609     ; get next filename match from wc.handler
      DEFC  GN_Wsm = $5C09     ; match filename segment to wildcard string

ENDIF

lston
