; *************************************************************************************
; RomUpdate variable definitions
; (C) Gunther Strube (gbs@users.sf.net) 2005
;
; RomUpdate is free software; you can redistribute it and/or modify it under the terms of the
; GNU General Public License as published by the Free Software Foundation;
; either version 2, or (at your option) any later version.
; RomUpdate is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
; See the GNU General Public License for more details.
; You should have received a copy of the GNU General Public License along with RomUpdate;
; see the file COPYING. If not, write to the
; Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
;
; $Id$
;
; *************************************************************************************

defc banksize = 16384

if POPDOWN
     defc RAM_pages = 17408/256                  ; total RAM DOR pages, 17K bytes continuous memory from upper 8K segment 0 ($2000 onwards)
     defc buffer = $2000                         ; use segment 0 onwards as 16K buffer to load a complete 16K bank from file
     defc linebuffer = buffer                    ; the line parsing buffer for config file 'romupdate.cfg' (use bank buffer)
     defc vararea = buffer+banksize              ; runtime variables just after 16K buffer
endif

if BBCBASIC
     defc vararea = $7E00                        ; The BBC BASIC version has runtime variables located just below segment 2
     defc buffer = $8000                         ; Use segment 2 as 16K buffer to load a complete 16K bank from file
     defc linebuffer = buffer                    ; The line parsing buffer uses bank buffer for config file, 'romupdate.cfg'
endif

defc MAX_IDLENGTH = 64                           ; max. 64 bytes identifier length (config file)
defc SIZEOF_LINEBUFFER = banksize                ; load config file into bank buffer to speed up parsing


DEFVARS vararea
{
     dorcpy             ds.b 64                  ; a copy of bank file image DOR
     doroffset          ds.w 1                   ; the offset within the bank of the found application in a card
     dorbank            ds.b 1                   ; the bank number of the found application in a card
     nextdoroffset      ds.w 1                   ; the offset of the next DOR (the brother link of found application DOR)
     nextdorbank        ds.b 1                   ; the bank number of the next DOR (the brother link of found application DOR)
     appname            ds.w 1                   ; local pointer to null-terminated application/popdown DOR name of bank file to be updated
     bankfilename       ds.b 128                 ; filename of bank file to be patched to card (fetched from romupdate.cfg)
     bankfilecrc        ds.l 1                   ; CRC of bank file (fetched from from romupdate.cfg)
     bankfiledor        ds.w 1                   ; offset pointer to DOR in bank file
     filename           ds.b 128                 ; generic filename buffer
     presvdbanks        ds.b 4                   ; 4 byte array of bank numbers that are preserved as :RAM.-/bank.<bank number>
     presvdbankcrcs     ds.l 4                   ; array of CRC's for preserved banks (index matches preserved bank array)
     retry              ds.b 1                   ; a simple retry counter for Flash Card Erase & BlockWrite commands
     ident              ds.b 66                  ; buffer for current collected ident. (config file)
     lineptr            ds.w 1                   ; pointer to current byte in linebuffer (config file)
     nextline           ds.w 1                   ; pointer to beginning of next source line in buffer (config file)
     bufferend          ds.w 1                   ; pointer to end of buffer information, L-end (config file)
     sym                ds.b 1                   ; current symbol identifier of ident. (config file)
     longint            ds.l 1                   ; long integer variable (config file usage)
     cfgfilelineno      ds.w 1                   ; line number reference for syntax errors during file parsing
}

;  Mnemonics used to symbolize various identifiers in config file:
DEFGROUP {
    ; this first section matches the .separators string in configfile.asm
    sym_null, sym_dquote, sym_squote, sym_semicolon, sym_comma, sym_fullstop
    sym_lparen, sym_lcurly, sym_rcurly, sym_rparen, sym_plus, sym_minus, sym_multiply, sym_divi
    sym_mod, sym_power, sym_assign, sym_strconq, sym_and, sym_or, sym_xor, sym_not
    sym_less, sym_greater, sym_constexpr, sym_newline, sym_lf

    sym_name, sym_decmconst, sym_hexconst, sym_binconst, sym_charconst, sym_negated, sym_nil
}
